<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgE+AYYAAAAAAP///3JycnFxcW9vb25ubm1tbWtra2pqamhoaGZmZmVlZWRkZGJiYmFhYWBg
        YF9fX15eXl1dXVxcXFtbW1paWllZWVhYWFdXV1ZWVlVVVVRUVFNTU1JSUlFRUVBQUE9PT05OTk1NTUxM
        TEtLS0pKSklJSUhISEdHR0ZGRkVFRURERENDQ0JCQkFBQUBAQD8/Pz4+Pj09PTw8PDs7Ozo6Ojk5OTg4
        ODc3NzY2NjU1NTQ0NDMzMzIyMjExMTAwMC8vLy4uLi0tLSwsLCsrKyoqKikpKSgoKCcnJyYmJiUlJSQk
        JCMjIyIiIiEhISAgIB8fHx4eHh0dHRwcHBsbGxoaGhkZGRgYGBcXFxYWFhUVFRQUFBMTExISEhERERAQ
        EA8PDw4ODg0NDQwMDAsLCwoKCgkJCQgICAcHBwYGBgUFBQQEBAMDAwICAgEBAf///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQB
        AABvACwAAAAAMgE+AQAI/wDfCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsWPHHUdWsABzwqPJ
        kyhTqlzJUqMGI2wAyHQjMyYAmgC0qCnQsqfPn0CDAiUjE0CbNjiLKsVJ040YMUKjSp1KtWqELjeTKt3K
        tWgbAC6qih1LtixFB2gAsNHadWlbN18lmJ1Lt27VBzK/tu3Klq+bMnYDCx5scubew4iVTiHMuLFjhlQS
        S54M5LHly4wN35zMuS3mz6DHVulMei9NNqFTq/apubTrpWNWy57d8bXttlho694dUcLm28A3t+BNvLjB
        DL+DA/9qvDlxDcmVBzfjvLrsENKzGwUgw7r3z9i1Z7Wn+b38Yzd9xb+mGcS8e8HR1St/T39ufPnBIdTf
        X/U+fuBb8CegUFKk9x9wAybYEwUGHmhbGz4oKGFKejk43hoTZtjRGhVaqBx5GoZ4UQceyheWiChKVKJ8
        S6TookMsrCheG1C9aGNCMoqH3o08GtRhjsDRNEKPRG7RIJCuvUBkj0hq5wYNS97YpHZtSBGlja1NaZsb
        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
        YAY0xAXcicn7IQFbcAAFsL2gfMpiERAAOw==
</value>
  </data>
</root>